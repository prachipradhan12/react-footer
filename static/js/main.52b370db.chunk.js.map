{"version":3,"sources":["three-wooden-signage-in-a-tree-close-up-photography-2562560.jpg","logo.svg","contact.js","SocialFollow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","SocialFollow","className","href","icon","faYoutube","size","faFacebook","faTwitter","faInstagram","App","src","leftpic","alt","styles","contactcontainer","action","type","id","name","placeholder","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,yF,4ECA3CD,EAAOC,QAAU,IAA0B,kC,4JCIrBC,Y,aCKP,SAASC,IACpB,OACI,yBAAKC,UAAU,oBAAf,aACO,6BACV,uBACGC,KAAK,oCACLD,UAAU,gBAFb,sCAMC,6BACA,6BACA,6BACA,uBACEC,KAAK,2BACLD,UAAU,kBAEV,kBAAC,IAAD,CAAiBE,KAAMC,IAAWC,KAAK,QAEzC,uBACEH,KAAK,4BACLD,UAAU,mBAEV,kBAAC,IAAD,CAAiBE,KAAMG,IAAYD,KAAK,QAE1C,uBAAGH,KAAK,2BAA2BD,UAAU,kBAC3C,kBAAC,IAAD,CAAiBE,KAAMI,IAAWF,KAAK,QAEzC,uBACEH,KAAK,6BACLD,UAAU,oBAEV,kBAAC,IAAD,CAAiBE,KAAMK,IAAaH,KAAK,S,ICmBlCI,E,uKAlDX,OAGE,4BAAQR,UAAU,UAChB,yBAAKA,UAAU,WACf,yBAAKA,UAAU,aAEvB,yBAAKA,UAAU,sBACf,yBAAKS,IAAKC,IAASC,IAAI,OAAOX,UAAU,gBAExC,yBAAKA,UAAU,wBAET,yBAAKA,UAAWY,IAAOC,kBACvB,yBAAKb,UAAU,OAEV,yCACX,kBAACD,EAAD,MACM,6BAGA,0BAAMe,OAAO,oBACb,6CACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,KAAK,YAAYC,YAAY,gBAC3D,4CACA,2BAAOH,KAAK,OAAOC,GAAG,QAAQC,KAAK,WAAWC,YAAY,qBAG1D,wCACA,2BAAOH,KAAK,QAAQC,GAAG,QAAQC,KAAK,QAAQC,YAAY,eAGxD,0CACA,8BAAUF,GAAG,UAAUD,KAAK,WAAWE,KAAK,UAAUC,YAAY,sBAClE,gCAAQ,2BAAOH,KAAK,SAASI,MAAM,mBAQxC,0E,GA3CiBrB,aCIEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.52b370db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/three-wooden-signage-in-a-tree-close-up-photography-2562560.adba9865.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n/*import './App.css';*/\r\nimport './contact.css';\r\n\r\nclass contact extends Component{\r\n  render() {\r\n    return (\r\n      <div>\r\n      <p>Contact Us</p>\r\n      <div>\r\n      <form action=\"/action_page.php\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\" />\r\n      <label>Last Name</label>\r\n      <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\" />\r\n  \r\n  \r\n      <label>Email</label>\r\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email\" />\r\n  \r\n  \r\n      <label>Subject</label>\r\n      <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\"></textarea>\r\n      <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n }\r\n\r\nexport default contact\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faYoutube,\r\n    faFacebook,\r\n    faTwitter,\r\n    faInstagram,\r\n    faGoogle\r\n}from '@fortawesome/free-brands-svg-icons';\r\nexport default function SocialFollow(){\r\n    return(\r\n        <div className=\"social-container\">\r\n     Mail us at<br />\r\n     <a\r\n        href=\"https://youthindiafoundation.com/\"\r\n        className=\"gmail social\"\r\n      >contactus@youthindiafoundation.com\r\n        \r\n      </a>\r\n      <br />\r\n      <br/>\r\n      <br/>\r\n      <a\r\n        href=\"https://www.youtube.com/\"\r\n        className=\"youtube social\"\r\n      >\r\n        <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://www.facebook.com/\"\r\n        className=\"facebook social\"\r\n      >\r\n        <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n      </a>\r\n      <a href=\"https://www.twitter.com/\" className=\"twitter social\">\r\n        <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n      </a>\r\n      <a\r\n        href=\"https://www.instagram.com/\"\r\n        className=\"instagram social\"\r\n      >\r\n        <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n      </a>\r\n    </div>\r\n    );\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport leftpic from './three-wooden-signage-in-a-tree-close-up-photography-2562560.jpg';\nimport contact from './contact'\nimport SocialFollow from './SocialFollow';\n// import './App.css';\nimport styles from './contact.css';\n\nclass App extends Component{\n  render() {\n    return (\n\n      \n      <footer className=\"footer\">\n        <div className=\"content\">\n        <div className=\"container\">\n\n<div className=\"left-div left-text\">\n<img src={leftpic} alt=\"Logo\" className=\"responsive\" />\n</div>\n<div className=\"right-div right-text\">\n       \n      <div className={styles.contactcontainer}>\n      <div className=\"App\">\n        \n           <p>Contact Us</p>\n<SocialFollow />\n      <div>\n      \n\n      <form action=\"/action_page.php\">\n      <label>First Name</label>\n      <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\" />\n      <label>Last Name</label>\n      <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\" />\n  \n  \n      <label>Email</label>\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email\" />\n  \n  \n      <label>Subject</label>\n      <textarea id=\"subject\" type=\"textarea\" name=\"subject\" placeholder=\"Write something..\"></textarea>\n      <center><input type=\"submit\" value=\"Submit\" /></center>\n      </form>\n      </div>\n      </div>\n      </div>\n      </div>\n </div>\n </div>\n <p> &copy; 2020 by Youth India Foundation. </p>\n      </footer>\n \n      \n         );\n  }\n  \n }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}